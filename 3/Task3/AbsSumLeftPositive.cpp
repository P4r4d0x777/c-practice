#include "pch.h"
#include "AbsSumLeftPositive.h"
// ќпредел€ет сумму модулей элементов массива, расположенных до последнего положительного элемента
						// const double*
						// arr - это сокращение от транслита "arrsiv". “ранслит не использовать!
double AbsSumLeftPositive(const double* arr, size_t count)
{
	// флаги - это обычно плохо. Ќјйдите в одном цикле индекс последнего положительного элемента, а в другом уже сумму нужную
	int CountOfLastPositive = 0; // Сколько раз нужно написать, что локальные переменные со строчной буквы?
	double sum = 0;
	// Вот тут как раз проще было с конца проходить, как только встретили положительное число, можно дальше не идти
	for (int i = count - 1; i >= 0; --i)
	{
		if (arr[i] > 0)
		{
			CountOfLastPositive = i;
			break;
		}
	}
	// А здесь наоборот, лучше сначала. Понятно, что от перемены мест слагаемых сумма не меняется, но читающий ваш код будет напрягаться, почему вы именно с конца (непривычным образом) это делаете
	for (int j = 0; j < CountOfLastPositive; ++j)
	{
		//  в задании просто сказано что такую индексацию тоже надо продемонстрировать
		// индексировать массивы с помощью оператора [], то есть не *(arr + j - 1), а arr[j - 1];
		// А почему так криво - j от 1 до CountOfLastPositive, а потом j-1? Сделайте по-человечески, j = 0; j < CountOfLastPositive; и складывайте arr[j]
		sum += abs(arr[j]); // »спользование адресной арифметики
	}
	return sum;
}